{"version":3,"sources":["components/UI.jsx","components/SearchBar.jsx","components/AutoDetect.jsx","components/VideoDetail.jsx","components/VideoItem.jsx","components/VideoList.jsx","components/api/youtube.js","components/YoutubeUI.jsx","App.js","serviceWorker.js","index.js"],"names":["Section","section","index","removeSection","Grid","container","spacing","item","xs","title","time","Button","variant","color","onClick","useState","setTime","setTitle","sections","setSections","newSections","splice","Container","maxWidth","Typography","component","align","map","key","onSubmit","e","preventDefault","TextField","margin","required","fullWidth","label","name","value","autoFocus","onChange","target","id","className","addSection","Link","to","pathname","type","searchTerm","setSearchTerm","Paper","elevation","style","padding","event","onKeyPress","video","player","i","matchArr","snippet","description","match","length","push","substring","indexOf","error","Box","Chip","current","seekTo","seconds","a","split","timeconversion","onClickHandle","display","videoSrc","useRef","Fragment","height","width","ref","url","controls","playing","channelTitle","AutoDetect","onVideoSelect","handleDescription","alignItems","cursor","marginRight","alt","src","thumbnails","medium","videos","listOfVideos","VideoItem","videoId","axios","create","baseURL","setVideos","selectedVideo","setSelectedVideo","justifyContent","sm","md","SearchBar","VideoDetail","VideoList","youtube","get","params","part","maxResults","q","data","items","newVideo","App","path","exact","YoutubeUI","UI","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d85fb010.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n//import \"./Styles/Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Section = ({ section, index, removeSection }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs>\r\n        {section.title}\r\n      </Grid>\r\n      <Grid item xs>\r\n        {section.time}\r\n      </Grid>\r\n      <Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => removeSection(index)}\r\n        >\r\n          x\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [time, setTime] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [sections, setSections] = useState([{ title: \"\", time: \"\" }]);\r\n  // const addData = ({ title, time }) => {\r\n  //   setSections(title, time);\r\n  // };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    //addSection(value);\r\n    // setTitle(\"\");\r\n    // setTime(\"\");\r\n  };\r\n\r\n  const addSection = (title, time) => {\r\n    if (!title) return;\r\n    if (!time) return;\r\n    const newSections = [...sections, { title, time }];\r\n    setSections(newSections);\r\n    setTime(\"\");\r\n    setTitle(\"\");\r\n  };\r\n\r\n  const removeSection = index => {\r\n    const newSections = [...sections];\r\n    newSections.splice(index, 1);\r\n    setSections(newSections);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n        Add Section\r\n      </Typography>\r\n      <div>\r\n        {sections.map((section, index) => (\r\n          <Section\r\n            key={index}\r\n            index={index}\r\n            section={section}\r\n            removeSection={removeSection}\r\n          />\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          label=\"Name\"\r\n          name=\"title\"\r\n          value={title}\r\n          autoFocus\r\n          onChange={e => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"time\"\r\n          label=\"Time\"\r\n          id=\"time\"\r\n          value={time}\r\n          className=\"time\"\r\n          onChange={e => {\r\n            setTime(e.target.value);\r\n          }}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                addSection(title, time);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs align=\"center\">\r\n            <Button variant=\"contained\" component={Link}\r\n            to={{ pathname: \"/\" }} color=\"primary\" >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs align=\"center\">\r\n          <Button\r\n            type=\"submit\"\r\n            component={Link}\r\n            to={{ pathname: \"/\", sections: sections }}\r\n            // onClick={() => {props.location.handleManualTimestamp()}}\r\n            align=\"center\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\n\r\nexport default ({ onSubmit }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const handleChange = event => setSearchTerm(event.target.value);\r\n\r\n  const onKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      onSubmit(searchTerm);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={6} style={{ padding: \"25px\" }}>\r\n      <TextField\r\n        fullWidth\r\n        label=\"Search...\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Chip, Box } from \"@material-ui/core\";\r\nexport default ({ video, player }) => {\r\n  // var sections = [];\r\n  // var str = video.snippet.description;\r\n  // var matchArr = str.match(/([\\d{1,}]?:?\\d{1,2}:\\d{2}).*/gi);\r\n  try {\r\n    var sections = [];\r\n    var str = video.snippet.description;\r\n    var matchArr = str.match(/([\\d{1,}]?:?\\d{1,2}:\\d{2}) .*/gi);\r\n    // console.log(matchArr);\r\n    if (matchArr.length === 0) return;\r\n    var i;\r\n    for (i = 0; i < matchArr.length; i++) {\r\n      sections.push({\r\n        title: matchArr[i].substring(\r\n          matchArr[i].indexOf(\" \") + 1,\r\n          matchArr[i].length\r\n        ),\r\n        time: matchArr[i].substring(0, matchArr[i].indexOf(\" \"))\r\n      });\r\n    }\r\n    // console.log(sections);\r\n  } catch (error) {}\r\n  // if (matchArr.length == 0) return;\r\n  const timeconversion = time => {\r\n    time = time.match(/(.[\\d{1,}]?:?\\d{1,2}:\\d{2})/gi);\r\n    // console.log(time);\r\n    var a = time[0].split(\":\");\r\n    var seconds;\r\n    if (a.length > 2) {\r\n      seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\r\n    } else if (a.length === 2) {\r\n      seconds = +a[0] * 60 + +a[1];\r\n    } else if (a.length === 1) {\r\n      seconds = a[0];\r\n    }\r\n    // console.log(seconds);\r\n    return seconds;\r\n  };\r\n  const onClickHandle = (player, time) => {\r\n    player.current.seekTo(timeconversion(time));\r\n  };\r\n  return (\r\n    <Box>\r\n      {sections.map((section, index) => (\r\n        <Chip\r\n          label={section.title}\r\n          onClick={() => onClickHandle(player, section.time)}\r\n          display=\"flex\"\r\n          color=\"primary\"\r\n          key={index}\r\n        ></Chip>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport { Paper, Typography, Box } from \"@material-ui/core\";\r\nimport AutoDetect from \"./AutoDetect\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nexport default ({ video }) => {\r\n  if (!video) return <div>Loading</div>;\r\n  // const [newVideo, setnewVideo] = useState(null);\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id}?enablejsapi=1`;\r\n  const player = useRef(null);\r\n  // useEffect(() => {\r\n  //   player.current.focus();\r\n  // }, []);\r\n  // try {\r\n  //   player.seekTo(45);\r\n  // } catch (error) {}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper elevation={6} style={{ height: \"100%\" }}>\r\n        <ReactPlayer\r\n          width=\"100%\"\r\n          height=\"50%\"\r\n          ref={player}\r\n          url={videoSrc}\r\n          controls={true}\r\n          playing={true}\r\n          // autoPlay={true}\r\n          // config\r\n        ></ReactPlayer>\r\n        {/* <Button onClick={() => player.current.seekTo(45)}>click me</Button> */}\r\n        {/* <iframe\r\n          frameBorder=\"0\"\r\n          width=\"932px\"\r\n          height=\"524px\"\r\n          title=\"Video Player\"\r\n          src={videoSrc}\r\n          allowFullScreen\r\n        /> */}\r\n        <Box elevation={6} style={{ padding: \"5px\" }}>\r\n          <Typography variant=\"h5\">\r\n            {video.snippet.title} - {video.snippet.channelTitle}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            {video.snippet.channelTitle}\r\n          </Typography>\r\n          <Box>\r\n            <AutoDetect video={video} player={player}></AutoDetect>\r\n          </Box>\r\n          {/* <Typography>\r\n            <Test sections={sections}></Test>\r\n            <Test handleTimestamp={handleTimestamp}></Test>\r\n          </Typography> */}\r\n        </Box>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Typography, Container } from \"@material-ui/core\";\r\n\r\nexport default ({ video, onVideoSelect, handleDescription }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container\r\n        style={{ display: \"flex\", alignItems: \"right\", cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          onVideoSelect(video);\r\n          handleDescription(video);\r\n        }}\r\n      >\r\n        <img\r\n          style={{ marginRight: \"3px\" }}\r\n          alt=\"thumbnail\"\r\n          src={video.snippet.thumbnails.medium.url}\r\n        />\r\n        <Typography variant=\"subtitle2\">\r\n          <b>{video.snippet.title}</b>\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nexport default ({ videos, onVideoSelect, handleDescription }) => {\r\n  const listOfVideos = videos.map(video => (\r\n    <VideoItem\r\n      onVideoSelect={onVideoSelect}\r\n      handleDescription={handleDescription}\r\n      key={video.id.videoId}\r\n      video={video}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Grid container spacing={10}>\r\n      {listOfVideos}\r\n    </Grid>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\"\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport VideoDetail from \"./VideoDetail\";\r\nimport VideoList from \"./VideoList\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// import AutoDetect from \"./AutoDetect\";\r\nimport youtube from \"./api/youtube\";\r\nexport default () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  // var sections= props.location.sections ? props.location.sections : [];\r\n  // console.log(sections);\r\n  // console.log(this.props.location);\r\n  // const AddTimestamp= (handleManualTimestmp) => {\r\n  //   if(!selectedVideo) return <div></div>;\r\n  //     else {\r\n  //       return <Button variant=\"contained\" component={Link}\r\n  //       to={{ pathname: \"/ui\", handleManualTimestmp: handleManualTimestmp}} color=\"primary\">\r\n  //         Add Timestamp\r\n  //       </Button>\r\n  //     }\r\n      \r\n  // }\r\n  return (\r\n    <React.Fragment>\r\n      {/* <AddTimestamp handleManualTimestmp= {handleManualTimestmp}></AddTimestamp> */}\r\n      <Box>\r\n        <Grid style={{ justifyContent: \"center\" }}>\r\n          <Grid container spacing={5} style={{ justifyContent: \"center\" }}>\r\n            <Grid item xs={4} sm={8} md={10}  style={{ justifyContent: \"center\" }} >\r\n              <SearchBar onSubmit={handleSubmit} />\r\n            </Grid>\r\n            <Grid item xs={4} sm={8} md={8}>\r\n              <VideoDetail video={selectedVideo}  />\r\n            </Grid>\r\n            <Grid item xs={2} sm={4} md={4}>\r\n              <VideoList\r\n                videos={videos}\r\n                onVideoSelect={setSelectedVideo}\r\n                handleDescription={handleDescription}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        </Box>\r\n      {/* <div>\r\n        <AutoDetect video={selectedVideo} />\r\n      </div> */}\r\n    </React.Fragment>\r\n  );\r\n\r\n  async function handleSubmit(searchTerm) {\r\n    const {\r\n      data: { items: videos }\r\n    } = await youtube.get(\"search\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        maxResults: 6,\r\n        type: \"video\",\r\n        key: \"AIzaSyATGhplOMLs0KlePQnIk2t3yYyOpT02euA\",\r\n        q: searchTerm\r\n        //type: \"playlist\"\r\n      }\r\n    });\r\n\r\n    setVideos(videos);\r\n    if (!selectedVideo) setSelectedVideo(videos[0]);\r\n    handleDescription(videos[0]);\r\n  }\r\n  // async function handleManualTimestmp(searchTerm, selectedVideo ){\r\n  //   handleSubmit(searchTerm);\r\n  //   handleDescription(selectedVideo);\r\n  // }\r\n\r\n  async function handleDescription(selectedVideo) {\r\n    const {\r\n      data: { items: newVideo }\r\n    } = await youtube.get(\"videos\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        id: selectedVideo.id.videoId,\r\n        key: \"AIzaSyATGhplOMLs0KlePQnIk2t3yYyOpT02euA\"\r\n      }\r\n    });\r\n    setSelectedVideo(newVideo[0]);\r\n  }\r\n};\r\n","import React from \"react\";\nimport { UI, YoutubeUI } from \"./components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={YoutubeUI} />\n        {/* <Route path=\"/test\" exact component={test} /> */}\n        <Route path=\"/ui\" exact component= {UI} />\n      </Switch>\n      {/* <div>\n        <UI></UI>\n      </div>\n      <div>\n        <test></test>\n      </div> */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}