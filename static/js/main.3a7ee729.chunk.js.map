{"version":3,"sources":["components/UI.jsx","components/SearchBar.jsx","components/Timestamp/convertToSeconds.js","components/Timestamp/DetectTimestamp.jsx","components/VideoDetail.jsx","components/api/youtube.js","components/HomePage.jsx","components/VideoItem.jsx","components/VideoList.jsx","App.js","serviceWorker.js","index.js"],"names":["Section","section","index","removeSection","Grid","container","spacing","item","xs","title","time","Button","variant","color","onClick","useState","setTime","setTitle","sections","setSections","newSections","splice","Container","maxWidth","Typography","component","align","map","key","onSubmit","e","preventDefault","TextField","margin","required","fullWidth","label","name","value","autoFocus","onChange","target","id","className","addSection","Link","to","pathname","type","searchTerm","setSearchTerm","Paper","event","onKeyPress","convertToSeconds","seconds","split","length","console","log","video","player","matchArr","snippet","description","match","forEach","error","Box","Chip","current","seekTo","onClickHandle","display","videoSrc","useRef","Fragment","width","height","ref","url","controls","playing","style","padding","channelTitle","axios","create","baseURL","params","part","maxResults","VideoContext","createContext","videos","setVideos","selectedVideo","setSelectedVideo","sm","md","SearchBar","Provider","handleDescription","VideoDetail","VideoList","onVideoSelect","a","youtube","get","q","data","items","videoId","newVideo","useContext","alt","src","thumbnails","medium","listOfVideos","VideoItem","App","basename","process","path","exact","HomePage","UI","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a7ee729.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n//import \"./Styles/Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Section = ({ section, index, removeSection }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs>\r\n        {section.title}\r\n      </Grid>\r\n      <Grid item xs>\r\n        {section.time}\r\n      </Grid>\r\n      <Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => removeSection(index)}\r\n        >\r\n          x\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [time, setTime] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [sections, setSections] = useState([{ title: \"\", time: \"\" }]);\r\n  // const addData = ({ title, time }) => {\r\n  //   setSections(title, time);\r\n  // };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    //addSection(value);\r\n    // setTitle(\"\");\r\n    // setTime(\"\");\r\n  };\r\n\r\n  const addSection = (title, time) => {\r\n    if (!title) return;\r\n    if (!time) return;\r\n    const newSections = [...sections, { title, time }];\r\n    setSections(newSections);\r\n    setTime(\"\");\r\n    setTitle(\"\");\r\n  };\r\n\r\n  const removeSection = index => {\r\n    const newSections = [...sections];\r\n    newSections.splice(index, 1);\r\n    setSections(newSections);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n        Add Section\r\n      </Typography>\r\n      <div>\r\n        {sections.map((section, index) => (\r\n          <Section\r\n            key={index}\r\n            index={index}\r\n            section={section}\r\n            removeSection={removeSection}\r\n          />\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          label=\"Name\"\r\n          name=\"title\"\r\n          value={title}\r\n          autoFocus\r\n          onChange={e => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"time\"\r\n          label=\"Time\"\r\n          id=\"time\"\r\n          value={time}\r\n          className=\"time\"\r\n          onChange={e => {\r\n            setTime(e.target.value);\r\n          }}\r\n        />\r\n        <Grid container>\r\n          <Grid item xs align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                addSection(title, time);\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs align=\"center\">\r\n            <Button variant=\"contained\" component={Link}\r\n            to={{ pathname: \"/\" }} color=\"primary\" >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs align=\"center\">\r\n          <Button\r\n            type=\"submit\"\r\n            component={Link}\r\n            to={{ pathname: \"/\", sections: sections }}\r\n            // onClick={() => {props.location.handleManualTimestamp()}}\r\n            align=\"center\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\n\r\nexport default ({ onSubmit }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const handleChange = event => setSearchTerm(event.target.value);\r\n\r\n  const onKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      onSubmit(searchTerm);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"searchbar\">\r\n      <TextField\r\n        fullWidth\r\n        label=\"Search...\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n        onKeyPress={onKeyPress}\r\n        autoFocus\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","const convertToSeconds = time => {\r\n    if (time === null) return;\r\n    time = time[0].split(\":\");\r\n    let seconds;\r\n    if (time.length === 3) {\r\n        return seconds = +time[0] * 60 * 60 + +time[1] * 60 + +time[2];\r\n    }\r\n    if (time.length === 2) {\r\n        return seconds = +time[0] * 60 + +time[1];\r\n    }\r\n    if (time.length === 1) {\r\n        return seconds = time[0];\r\n    }\r\n    console.log(seconds);\r\n    return seconds;\r\n};\r\n\r\nexport default convertToSeconds;","import React from \"react\";\r\nimport { Chip, Box } from \"@material-ui/core\";\r\nimport convertToSeconds from \"./convertToSeconds.js\";\r\n\r\n\r\nexport default ({ video, player }) => {\r\n  try {\r\n    var sections = [];\r\n    var description = video.snippet.description;\r\n    var matchArr = description.match(/.*([\\d{1,}]?:?\\d{1,2}:\\d{2}).*/gi);\r\n    if (matchArr.length === 0) return;\r\n    //var i;\r\n\r\n    matchArr.forEach((section) => {\r\n      sections = [...sections, {\r\n        title: section.match(/[a-zA-Z ]+/gi),\r\n        time: section.match(/(\\d{1,}]?:?\\d{0,2}:\\d{2})/gim)\r\n      }];\r\n      \r\n    })\r\n\r\n    // for (i = 0; i < matchArr.length; i++) {\r\n    //   sections = [...sections, {\r\n    //     title: matchArr[i].match(/[a-zA-Z ]+/gi),\r\n    //     time: matchArr[i].match(/(\\d{1,}]?:?\\d{0,2}:\\d{2})/gim)\r\n    //   }];\r\n    // }\r\n  } catch (error) {\r\n    console.log(error);\r\n   }\r\n\r\n  const onClickHandle = (player, time) => {\r\n    player.current.seekTo(convertToSeconds(time));\r\n  };\r\n  \r\n  return (\r\n    <Box>\r\n      {sections.map((section, index) => (\r\n        <div className=\"chip-wrapper\">\r\n          <Chip\r\n            label={section.title}\r\n            onClick={() => onClickHandle(player, section.time)}\r\n            display=\"flex\"\r\n            color=\"primary\"\r\n            key={index}\r\n          ></Chip>\r\n        </div>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport { Paper, Typography, Box } from \"@material-ui/core\";\r\nimport AutoDetect from \"./Timestamp/DetectTimestamp\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nexport default ({ video }) => {\r\n  if (!video) return <Typography variant=\"h3\" className=\"loading\">Loading...</Typography>;\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id}?enablejsapi=1`;\r\n  const player = useRef(null);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper>\r\n        <div className=\"player-wrapper\">\r\n          <ReactPlayer\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            ref={player}\r\n            url={videoSrc}\r\n            controls={true}\r\n            playing={true}\r\n            // autoPlay={true}\r\n            // config\r\n            className=\"react-player\"\r\n          ></ReactPlayer>\r\n        </div>\r\n        <Box style={{ padding: \"5px\" }}>\r\n          <Typography variant=\"h5\">\r\n            {video.snippet.title} - {video.snippet.channelTitle}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            {video.snippet.channelTitle}\r\n          </Typography>\r\n          <Box>\r\n            <AutoDetect video={video} player={player}></AutoDetect>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nconst API_KEY = \"AIzaSyCw93QMRp0exJUTSXql_1rB6EFajvSuIdU\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n  params: {\r\n    part: \"snippet\",\r\n    maxResults: 10,\r\n    type: \"video\",\r\n    key: API_KEY,\r\n  }\r\n});\r\n","import React, { useState, createContext } from \"react\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport VideoDetail from \"./VideoDetail\";\r\nimport VideoList from \"./VideoList\";\r\nimport youtube from \"./api/youtube\";\r\n\r\nexport const VideoContext = createContext();\r\nexport default () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  return (\r\n    <React.Fragment>\r\n      <Box>\r\n        <Grid container spacing={5} className=\"ui-grid\">\r\n          <Grid item xs={12} sm={12} md={12} className=\"grid-item\" >\r\n            <SearchBar onSubmit={handleSubmit} />\r\n          </Grid>\r\n          <VideoContext.Provider value={{videos, setSelectedVideo, handleDescription}}>\r\n            <Grid item xs={12} sm={8} md={8}>\r\n              <VideoDetail video={selectedVideo}  />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <VideoList\r\n                videos={videos}\r\n                onVideoSelect={setSelectedVideo}\r\n                handleDescription={handleDescription}\r\n              />\r\n            </Grid>\r\n          </VideoContext.Provider>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n\r\n  async function handleSubmit(searchTerm) {\r\n    const {\r\n      data: { items: videos }\r\n    } = await youtube.get(\"search\", {\r\n      params: {\r\n        q: searchTerm\r\n        //type: \"playlist\"\r\n      }\r\n    });\r\n\r\n    setVideos(videos);\r\n    if (!selectedVideo) setSelectedVideo(videos[0]);\r\n    handleDescription(videos[0]);\r\n  }\r\n  \r\n\r\n  async function handleDescription(selectedVideo) {\r\n    const {\r\n      data: { items: newVideo }\r\n    } = await youtube.get(\"videos\", {\r\n      params: {\r\n        id: selectedVideo.id.videoId,\r\n      }\r\n    });\r\n    setSelectedVideo(newVideo[0]);\r\n  }\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport { Typography, Container } from \"@material-ui/core\";\r\nimport { VideoContext } from \"./HomePage\";\r\n\r\n\r\nexport default ({ video }) => {\r\n  const {setSelectedVideo, handleDescription}= useContext(VideoContext)\r\n  return (\r\n    <React.Fragment>\r\n      <Container\r\n        onClick={() => {\r\n          setSelectedVideo(video);\r\n          handleDescription(video);\r\n        }}\r\n        className=\"video-item\"\r\n      >\r\n        <img\r\n          alt=\"thumbnail\"\r\n          src={video.snippet.thumbnails.medium.url}\r\n        />\r\n        <Typography variant=\"subtitle2\" >\r\n          <b>{video.snippet.title}</b>\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nexport default ({ videos }) => {\r\n  const listOfVideos = videos.map(video => (\r\n    <VideoItem\r\n      key={video.id.videoId}\r\n      video={video}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Grid container spacing={10}>\r\n      {listOfVideos}\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HomePage, UI } from \"./components\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        {/* <Route path=\"/test\" exact component={test} /> */}\r\n        <Route path=\"/ui\" exact component= {UI} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./styles/styles.css\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}